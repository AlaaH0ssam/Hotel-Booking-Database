-- Create the Department table
CREATE TABLE Department (
    Department_id INT PRIMARY KEY,
    Name VARCHAR2(50),
    Manager_id INT
);
-- Create the Supplier table
CREATE TABLE Supplier (
    Supplier_id INT PRIMARY KEY,
    Email VARCHAR2(100),
    Phone VARCHAR2(20),
    Name VARCHAR2(50),
    Address VARCHAR2(255),
    SDate DATE
);
-- Create the Event table
CREATE TABLE Event (
    Place VARCHAR2(100),
    Type VARCHAR2(50),
    Name VARCHAR2(100),
    Event_id INT PRIMARY KEY,
    EDate DATE,
    Number_of_attendance INT
);
-- Create the Room table
CREATE TABLE Room (
    Room_id INT PRIMARY KEY,
    RoomType VARCHAR2(50),
    RoomCapacity INT,
    Price NUMBER(10, 2),
    RoomView VARCHAR2(100),
    Availability VARCHAR2(20),
    Booking_id INT
);
-- Create the Employee table
CREATE TABLE Employee (
    Phone VARCHAR2(20),
    Start_date DATE,
    Salary NUMBER(10, 2),
    Employee_id INT PRIMARY KEY,
    Email VARCHAR2(100),
    F_name VARCHAR2(50),
    L_name VARCHAR2(50),
    Department_id INT
);
-- Create the Service table
CREATE TABLE Services (
    Price NUMBER(10, 2),
    Name VARCHAR2(50),
    Service_id INT PRIMARY KEY,
    Description VARCHAR2(255),
    Department_id INT,
    CONSTRAINT fk_service_department FOREIGN KEY (Department_id) REFERENCES Department (Department_id)
);
-- Create the Guest table
CREATE TABLE Guest (
    Guest_id INT PRIMARY KEY,
    Id_proof_type VARCHAR2(50),
    Date_of_birth DATE,
    F_name VARCHAR2(50),
    L_name VARCHAR2(50),
    Email VARCHAR2(100),
    Nationality VARCHAR2(50),
    Room_id INT,
    CONSTRAINT fk_guest_room FOREIGN KEY (Room_id) REFERENCES Room (Room_id)
);
-- Create the Booking table
CREATE TABLE Booking (
    Booking_id INT PRIMARY KEY,
    Booking_date DATE,
    Status VARCHAR2(20),
    Check_in_date DATE,
    Check_out_date DATE,
    Guest_id INT,
    Num_of_guests INT,
    CONSTRAINT fk_booking_guest FOREIGN KEY (Guest_id) REFERENCES Guest (Guest_id)
);
-- Create the Payment table
CREATE TABLE Payment (
    Payment_date DATE,
    Payment_method VARCHAR2(50),
    Payment_id INT PRIMARY KEY,
    Price NUMBER(10, 2),
    Status VARCHAR2(20)
);
-- Create the Item table
CREATE TABLE Item (
    Item_id INT PRIMARY KEY,
    Name VARCHAR2(50),
    Price NUMBER(10, 2),
    Supplier_id INT,
    Quantity INT,
    CONSTRAINT fk_item_supplier FOREIGN KEY (Supplier_id) REFERENCES Supplier (Supplier_id)
);
-- Create the Maintenance table
CREATE TABLE Maintenance (
    Maintenance_id INT PRIMARY KEY,
    Cost NUMBER(10, 2),
    Status VARCHAR2(20),
    Description VARCHAR2(255),
    Date_issue_report DATE,
    Date_issue_solved DATE
);
-- Create the EventOrganizer table
CREATE TABLE EventOrganizer (
    Event_id INT,
    Name VARCHAR2(50),
    Email VARCHAR2(100),
    Phone VARCHAR2(20),
    PRIMARY KEY (Event_id, Name),
    CONSTRAINT fk_event_organizer_event FOREIGN KEY (Event_id) REFERENCES Event (Event_id)
);
-- Create the Feedback table
CREATE TABLE Feedback (
    FeedbackDate DATE,
    Guest_id INT,
    Rate INT,
    FeedbackComment VARCHAR2(255),
    CONSTRAINT fk_feedback_guest FOREIGN KEY (Guest_id) REFERENCES Guest (Guest_id)
);
-- Create the GuestPhoneNumber table
CREATE TABLE GuestPhoneNumber (
    Guest_id INT,
    Country_key VARCHAR2(10),
    PhoneNumber VARCHAR2(20),
    PRIMARY KEY (Guest_id, PhoneNumber),
    CONSTRAINT fk_guest_phone FOREIGN KEY (Guest_id) REFERENCES Guest (Guest_id)
);
-- Create the JoinEvent table
CREATE TABLE JoinEvent (
    Guest_id INT,
    Event_id INT,
    PRIMARY KEY (Guest_id, Event_id),
    CONSTRAINT fk_join_guest FOREIGN KEY (Guest_id) REFERENCES Guest (Guest_id),
    CONSTRAINT fk_join_event FOREIGN KEY (Event_id) REFERENCES Event (Event_id)
);
-- Create the request service table
CREATE TABLE Request (
    Guest_id INT,
    Service_id INT,
    PRIMARY KEY (Guest_id, Service_id),
    CONSTRAINT fk_request_guest FOREIGN KEY (Guest_id) REFERENCES Guest (Guest_id),
    CONSTRAINT fk_request_service FOREIGN KEY (Service_id) REFERENCES Services (Service_id)
);
-- Create the need maintance table
CREATE TABLE Need (
    Room_id INT,
    Maintenance_id INT,
    PRIMARY KEY (Room_id, Maintenance_id),
    CONSTRAINT fk_need_room FOREIGN KEY (Room_id) REFERENCES Room (Room_id),
    CONSTRAINT fk_need_maintenance FOREIGN KEY (Maintenance_id) REFERENCES Maintenance (Maintenance_id)
);
-- Create the Payment Process table
CREATE TABLE Process (
    Booking_id INT,
    Payment_id INT,
    PRIMARY KEY (Booking_id, Payment_id),
    CONSTRAINT fk_process_booking FOREIGN KEY (Booking_id) REFERENCES Booking (Booking_id),
    CONSTRAINT fk_process_payment FOREIGN KEY (Payment_id) REFERENCES Payment (Payment_id)
);

--Add FOREIGN KEY to Booking Table
ALTER TABLE Booking
    ADD CONSTRAINT fk_room_booking FOREIGN KEY (Booking_id) REFERENCES Booking (Booking_id);

--Add FOREIGN KEY to Employee Table
ALTER TABLE Employee 
    ADD CONSTRAINT fk_employee_department FOREIGN KEY (Department_id) REFERENCES Department (Department_id);


-- Insert into ROOM 
INSERT INTO Room VALUES (101, 'Deluxe', 2, 200.00, 'Sea View', 'Available', 1);
INSERT INTO Room VALUES (102, 'Standard', 2, 120.00, 'City View', 'Occupied', 2);
INSERT INTO Room VALUES (103, 'Suite', 4, 350.00, 'Mountain View', 'Available', 3);

-- Insert into GUEST 
INSERT INTO Guest VALUES (1, 'Passport', TO_DATE('1990-01-01', 'YYYY-MM-DD'), 'Omar', 'Ahmed', 'omar.ahmed@example.com', 'American', 101);
INSERT INTO Guest VALUES (2, 'ID Card', TO_DATE('1985-05-12', 'YYYY-MM-DD'), 'Jana', 'Waeel', 'jana.waeel@example.com', 'British', 102);
INSERT INTO Guest VALUES (3, 'Driver License', TO_DATE('1992-11-22', 'YYYY-MM-DD'), 'Ahmed', 'Mohamed', 'ahmed.mohamed@example.com', 'Canadian', 103);

-- Insert into Booking
INSERT INTO Booking VALUES (1, TO_DATE('2024-12-01', 'YYYY-MM-DD'), 'Confirmed', TO_DATE('2024-12-10', 'YYYY-MM-DD'), TO_DATE('2024-12-15', 'YYYY-MM-DD'), 1, 2);
INSERT INTO Booking VALUES (2, TO_DATE('2024-12-02', 'YYYY-MM-DD'), 'Pending', TO_DATE('2024-12-12', 'YYYY-MM-DD'), TO_DATE('2024-12-17', 'YYYY-MM-DD'), 2, 1);
INSERT INTO Booking VALUES (3, TO_DATE('2024-12-03', 'YYYY-MM-DD'), 'Cancelled', TO_DATE('2024-12-14', 'YYYY-MM-DD'), TO_DATE('2024-12-18', 'YYYY-MM-DD'), 3, 3);

-- Insert into Department
INSERT INTO Department VALUES (1, 'Sales', 101);
INSERT INTO Department VALUES (2, 'Marketing', 102);
INSERT INTO Department VALUES (3, 'HR', 103);

-- Insert into Supplier
INSERT INTO Supplier VALUES (1, 'supplier1@example.com', '123-456-7890', 'ABC Corp.', '123 Main St, City', TO_DATE('2023-01-01', 'YYYY-MM-DD'));
INSERT INTO Supplier VALUES (2, 'supplier2@example.com', '123-456-7891', 'XYZ Ltd.', '456 Elm St, City', TO_DATE('2023-02-01', 'YYYY-MM-DD'));
INSERT INTO Supplier VALUES (3, 'supplier3@example.com', '123-456-7892', 'PQR Inc.', '789 Oak St, City', TO_DATE('2023-03-01', 'YYYY-MM-DD'));

-- Insert into Event
INSERT INTO Event VALUES ('Conference Room', 'Business', 'Tech Conference 2024', 1, TO_DATE('2024-12-10', 'YYYY-MM-DD'), 100);
INSERT INTO Event VALUES ('Main Hall', 'Music', 'Rock Concert', 2, TO_DATE('2024-12-15', 'YYYY-MM-DD'), 500);
INSERT INTO Event VALUES ('Auditorium', 'Theater', 'Shakespeare Play', 3, TO_DATE('2024-12-20', 'YYYY-MM-DD'), 200);

-- Insert into Payment
INSERT INTO Payment VALUES (TO_DATE('2024-12-05', 'YYYY-MM-DD'), 'Credit Card', 1, 400.00, 'Paid');
INSERT INTO Payment VALUES (TO_DATE('2024-12-07', 'YYYY-MM-DD'), 'Cash', 2, 250.00, 'Pending');
INSERT INTO Payment VALUES (TO_DATE('2024-12-10', 'YYYY-MM-DD'), 'Bank Transfer', 3, 600.00, 'Paid');

-- Insert into Item
INSERT INTO Item VALUES (1, 'Desk Chair', 150.00, 1, 20);
INSERT INTO Item VALUES (2, 'Office Table', 200.00, 2, 15);
INSERT INTO Item VALUES (3, 'Computer', 500.00, 3, 10);

-- Insert into Maintenance
INSERT INTO Maintenance VALUES (1, 150.00, 'Completed', 'AC repair in Room 101', TO_DATE('2024-12-01', 'YYYY-MM-DD'), TO_DATE('2024-12-03', 'YYYY-MM-DD'));
INSERT INTO Maintenance VALUES (2, 100.00, 'In Progress', 'Plumbing issue in Room 102', TO_DATE('2024-12-02', 'YYYY-MM-DD'), NULL);
INSERT INTO Maintenance VALUES (3, 200.00, 'Pending', 'Electrical issue in Room 103', TO_DATE('2024-12-03', 'YYYY-MM-DD'), NULL);

-- Insert into Feedback 
INSERT INTO Feedback VALUES (TO_DATE('2024-12-05', 'YYYY-MM-DD'), 1, 5, 'Great stay, loved the sea view and hospitality!');
INSERT INTO Feedback VALUES (TO_DATE('2024-12-07', 'YYYY-MM-DD'), 2, 4, 'Good room, but the city view was a bit noisy.');
INSERT INTO Feedback VALUES (TO_DATE('2024-12-10', 'YYYY-MM-DD'), 3, 3, 'Nice room, but the mountain view was obstructed.');

-- Insert into process by linking booking_id with payment_id  
INSERT INTO Process VALUES (1, 1);  
INSERT INTO Process VALUES (2, 2);  
INSERT INTO Process VALUES (3, 3); 

-- Insert into JoinEvent by linking Guest_id with Event_id
INSERT INTO JoinEvent VALUES (1, 1);  
INSERT INTO JoinEvent VALUES (2, 2);  
INSERT INTO JoinEvent VALUES (3, 3);  

-- Insert data GuestPhoneNumber 
INSERT INTO GuestPhoneNumber VALUES (1, 'US', '123-456-7890');  
INSERT INTO GuestPhoneNumber VALUES (2, 'GB', '987-654-3210');  
INSERT INTO GuestPhoneNumber VALUES (3, 'CA', '555-555-5555'); 

-- Insert into Service 
INSERT INTO Services VALUES (30.00, 'Room Service', 1, '24/7 food and drink service in your room', 1);  
INSERT INTO Services VALUES (15.00, 'Laundry',2, 'Laundry and dry cleaning services', 2); 
INSERT INTO Services VALUES ( 50.00, 'Spa', 3, 'Relaxing spa treatment', 3);  

-- Insert into EventOrganizer 
INSERT INTO EventOrganizer VALUES (1, 'John Doe', 'johndoe@example.com', '123-555-7890'); 
INSERT INTO EventOrganizer VALUES (2, 'Jane Smith', 'janesmith@example.com', '123-555-7891');
INSERT INTO EventOrganizer VALUES (3, 'Mark Lee', 'marklee@example.com', '123-555-7892'); 

-- Insert  into Employee
INSERT INTO Employee VALUES (1, 'Sarah', 'Johnson', 'sarah.johnson@example.com', '123-555-7890', TO_DATE('2024-01-15', 'YYYY-MM-DD'), 4500.00, 1);  
INSERT INTO Employee VALUES (2, 'David', 'Williams', 'david.williams@example.com', '123-555-7891', TO_DATE('2024-02-01', 'YYYY-MM-DD'), 5000.00, 2);  
INSERT INTO Employee VALUES (3, 'Emily', 'Smith', 'emily.smith@example.com', '123-555-7892', TO_DATE('2024-03-10', 'YYYY-MM-DD'), 6000.00, 3);  

-- Insert  into Request service
INSERT INTO Request VALUES (1, 1);  
INSERT INTO Request VALUES (2, 2);  
INSERT INTO Request VALUES (3, 3);  

-- Insert into Need 
INSERT INTO Need VALUES (101, 1);)
INSERT INTO Need VALUES (102, 2);  
INSERT INTO Need VALUES (103, 3);  

